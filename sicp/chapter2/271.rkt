#lang sicp

#|
  Упражнение 2.71

  Допустим, у нас есть дерево Хаффмана для алфавита из n символов, и относительные частоты символов
  равны 1, 2, 4, ..., 2ⁿ⁻¹. Изобразите дерево для n = 5; для n = 10. Сколько битов в таком дереве (для
  произвольного n) требуется, чтобы закодировать самый частый символ? Самый редкий символ?
|#

#|
  Дерево для n = 5:

            (s₅ s₄ s₃ s₂ s₁) 31
            / \
           /   \
        s₅ 16  (s₄ s₃ s₂ s₁) 15
               / \
              /   \
            s₄ 8  (s₃ s₂ s₁) 7
                  / \
                 /   \
               s₃ 4  (s₂ s₁) 3
                     / \
                    /   \
                 s₂ 2   s₁ 1

  Для n = 5, s₅ → (0), s₄ → (1 0), s₃ → (1 1 0), s₂ → (1 1 1 0), s₁ → (1 1 1 1)

  Дерево для n = 10:

             (s₁₀ s₉ s₈ s₇ s₆ s₅ s₄ s₃ s₂ s₁) 1023
             / \
            /   \
        s₁₀ 512 (s₉ s₈ s₇ s₆ s₅ s₄ s₃ s₂ s₁) 511
                / \
               /   \
            s₉ 256 (s₈ s₇ s₆ s₅ s₄ s₃ s₂ s₁) 255
                   / \
                  /   \
               s₈ 128 (s₇ s₆ s₅ s₄ s₃ s₂ s₁) 127
                      / \
                     /   \
                  s₇ 64  (s₆ s₅ s₄ s₃ s₂ s₁) 63
                         / \
                        /   \
                     s₆ 32  (s₅ s₄ s₃ s₂ s₁) 31
                            / \
                           /   \
                        s₅ 16  (s₄ s₃ s₂ s₁) 15
                               / \
                              /   \
                           s₄ 8   (s₃ s₂ s₁) 7
                                  / \
                                 /   \
                              s₃ 4   (s₂ s₁) 3
                                     / \
                                    /   \
                                 s₂ 2   s₁ 1

  На самый частый символ в таких деревьях требуется ровно один бит. На самый редкий требуется (n - 1)
  бит.
|#
