#lang sicp

#|
  Упражнение 3.46

  Допустим, что мы реализуем test-and-set! в виде обыкновенной процедуры, как показано в тексте, не
  пытаясь сделать ее атомарной. Нарисуйте временную диаграмму, подобную диаграмме на рис. 3.29, и
  покажите, как реализация мьютекса может ошибиться и позволить двум процессам одновременно захватить
  мьютекс.
|#

#|
      │        proc A             the-mutex             proc B
      │                      ┏━━━━━━━━━━━━━━━━┓
      │             ┌────────┨ cell: '(false) ┠─────────┐
      │             │        ┗━━━━━━━━━━━━━━━━┛         │
      │             ▼                                   │
      │ ┏━━━━━━━━━━━━━━━━━━━━━━┓                        │
      │ ┃ (the-mutex 'acquire) ┃                        │
      │ ┗━━━━━━━━━━━┯━━━━━━━━━━┛                        ▼
      │             │                       ┏━━━━━━━━━━━━━━━━━━━━━━┓
      │             │                       ┃ (the-mutex 'acquire) ┃
      │             ▼                       ┗━━━━━━━━━━━┯━━━━━━━━━━┛
      │ ┏━━━━━━━━━━━━━━━━━━━━━━┓                        │
      │ ┃ (test-and-set! cell) ┃                        │
      │ ┗━━━━━━━━━━━┯━━━━━━━━━━┛                        ▼
      │             │                       ┏━━━━━━━━━━━━━━━━━━━━━━┓
      │             │                       ┃ (test-and-set! cell) ┃
      │             ▼                       ┗━━━━━━━━━━━┯━━━━━━━━━━┛
      │ ┏━━━━━━━━━━━━━━━━━━━━━━┓                        │
      │ ┃ (set-car! cell true) ┃                        │
      │ ┗━━━━━━━━━━━┯━━━━━━━━━━┛                        │
      │             │         ┏━━━━━━━━━━━━━━━━┓        │
      │             └────────►┃  cell: '(true) ┃        │
      │             ┆         ┗━━━━━━━━━━━━━━━━┛        ▼
      │             ┆                       ┏━━━━━━━━━━━━━━━━━━━━━━┓
      │             ▼                       ┃ (set-car! cell true) ┃
      │        ╔═════════╗                  ┗━━━━━━━━━━━┯━━━━━━━━━━┛
      │        ║ proc A  ║    ┏━━━━━━━━━━━━━━━━┓        │
      │        ║         ║    ┃  cell: '(true) ┃◄───────┘
      │        ║         ║    ┗━━━━━━━━━━━━━━━━┛        ┆
      │        ║         ║                              ▼
      │        ║         ║                         ╔═════════╗
      │        ║         ║                         ║ proc B  ║
      │        ║         ║                         ║         ║
      │        ║   ...   ║                         ║   ...   ║
      ▼
    time
|#
