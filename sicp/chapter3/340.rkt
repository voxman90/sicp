#lang sicp

#|
  Упражнение 3.40

  Укажите все возможные значения x при выполнении

    (define x 10)

    (parallel-execute (lambda () (set! x (* x x)))
                      (lambda () (set! x (* x x x))))

  Какие из них сохраняются, если вместо этого мы выполняем сериализованные процедуры:

    (define x 10)

    (define s (make-serializer))

    (parallel-execute (s (lambda () (set! x (* x x))))
                      (s (lambda () (set! x (* x x x)))))
|#

#|
  Пусть процедура f: (lambda () (set! x (* x x)), а вторая процедура g: (lambda () (set! x (* x x x))).

  Подсчитаем исходы:

  1) отработает f и присвоит x значение 100, отработает g и присвоит x значение 1000000.

  2) отработает g и присвоит x значение 1000, отработает f и присвоит x значение 1000000.

  3-4) отработает f и во время работы g f присвоит x значение 100, это даёт следующие результаты g:
  10 * 100 * 100 = 100000, 10 * 10 * 100 = 10000

  5) отработает f, отработает g, g присвоит x значение 1000, f присвоит x значение 100

  6) отработает g и во время работы f g присвоит x значение 1000, это даёт следующие результ g:
  10 * 1000 = 10000

  7) отработает g, отработает f, f присвоит x значение 100, g присвоит x значение 1000

  Итого - семь исходов (некоторые из которых дадут одинаковый результат).

  Пусть процедура f: (s (lambda () (set! x (* x x))), а процедура g: (s (lambda () (set! x (* x x x)))).

  Сериализация позволит процедурам выполняться только последовательно, следовательно, останется только
  исход 1 и 2.
|#
