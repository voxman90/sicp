#lang sicp

#|
  Упражнение 3.43

  Предположим, что значения баланса на трех счетах вначале равны 10, 20 и 30 долларам, и что несколько
  процессов занимаются обменом значений баланса. Покажите, что если эти процессы выполняются последовательно,
  то после любого количества обменов значения баланса по-прежнему будут равны 10, 20 и 30 долларам, в
  каком-то порядке. Нарисуйте временную диаграмму вроде той, которая изображена на рис. 3.29, и покажите,
  что указанное условие может нарушаться, если работает первая версия процедуры обмена из этого раздела.
  Покажите, с другой стороны, что даже с первой программой exchange общая сумма балансов на счетах сохранится.
  Нарисуйте временную диаграмму, показывающую, что если бы мы не сериализовали транзакции по отдельным
  счетам, это условие тоже могло бы нарушаться.
|#

#|
  1) Наша процедура обмена:

    (define (exchange account1 account2)
      (let ((difference (- (account1 'balance)
                           (account2 'balance))))
        ((account1 'withdraw) difference)
        ((account2 'deposit) difference)))

    (define (serialized-exchange account1 account2)
      (let ((serializer1 (account1 ’serializer))
            (serializer2 (account2 ’serializer)))
        ((serializer1 (serializer2 exchange))
         account1 account2)))

  Пусть баланс на трёх счетах вначале равен 10, 20 и 30 долларов. Тогда возможные варианты исхода обменов
  таковы:

    +==========+==========+======+===================+===================+
    | balance1 | balance2 | diff |   new-balance1    |   new-balance2    |
    +==========+==========+======+===================+===================+
    |       10 |       20 |  -10 | (10 - (-10)) = 20 | (20 + (-10)) = 10 |
    +----------+----------+------+-------------------+-------------------+
    |       20 |       10 |   10 |    (20 - 10) = 10 |    (10 + 10) = 20 |
    +----------+----------+------+-------------------+-------------------+
    |       10 |       30 |  -20 | (10 - (-20)) = 30 |  (30 + (-20) = 10 |
    +----------+----------+------+-------------------+-------------------+
    |       30 |       10 |   20 |    (30 - 20) = 10 |    (10 + 20) = 30 |
    +----------+----------+------+-------------------+-------------------+
    |       20 |       30 |  -10 | (20 - (-10)) = 30 | (30 + (-10)) = 20 |
    +----------+----------+------+-------------------+-------------------+
    |       30 |       20 |   10 |    (30 - 10) = 20 |    (20 + 10) = 30 |
    +----------+----------+------+-------------------+-------------------+

  Значения баланса трёх счетов всегда есть выборка без повторений из множества {10, 20, 30}, т.к. каждый
  обмен, при сериализованной работе операций, меняет баланс двух счетов местами.

  2) Теперь проиллюстрируем с помощью диаграммы, как процедура обмена без сериализации может привести к
  неверным результатам:

      (define account1 (make-account 10))
      (define account2 (make-account 20))
      (define account3 (make-account 30))
      (parallel-execute (lambda () (exchange account1 account2))  ; exchange1
                        (lambda () (exchange account2 account3))) ; exchange2

      │ account1 account2 account3
      │ balance  balance  balance           exchange1                  exchange2
      │ ┏━━━━━━━┓┏━━━━━━━┓┏━━━━━━━┓┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │ ┃  1 0  ┃┃  2 0  ┃┃  3 0  ┃┃ (account1 'balance): 10 ┃
      │ ┗━━━┯━━━┛┗━━━┯━━━┛┗━━━┯━━━┛┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │     │        │        │                 ▼             ┃ (account2 'balance): 20 ┃
      │     │        │        │    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛
      │     │        │        │    ┃ (account2 'balance): 20 ┃             ▼
      │     │        │        │    ┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │     │        │        │                 ▼             ┃ (account3 'balance): 30 ┃
      │     │        │        │    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛
      │     │        │        │    ┃ difference: (- 10 20)   ┃             ▼
      │     │        │        │    ┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │     ▼        │        │                 ▼             ┃ difference: (- 20 30)   ┃
      │ ┏━━━━━━━┓    │        │    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛
      │ ┃  2 0  ┃◄───▼────────│────┨(account1 'withdraw): -10┃             ▼
      │ ┗━━━━━━━┛┏━━━━━━━┓    │    ┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │          ┃  3 0  ┃◄───│─────────────────│─────────────┨(account2 'withdraw): -10┃
      │          ┗━━━┯━━━┛    │                 │             ┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛
      │              ▼        │                 ▼                          │
      │          ┏━━━━━━━┓    │    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓             │
      │          ┃  2 0  ┃◄───▼────┨(account2 'deposit): -10 ┃             ▼
      │          ┗━━━━━━━┛┏━━━━━━━┓┗━━━━━━━━━━━━━━━━━━━━━━━━━┛┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │                   ┃  2 0  ┃◄──────────────────────────┨(account3 'deposit): -10 ┃
      │                   ┗━━━━━━━┛                           ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
      ▼
    time

  Общая сумма будет сохраняться, потому что мы всё ещё считаем процедуры снятия и занесения на счёт
  атомарными. Вмешательство может происходить на этапе подсчёта difference, после чего эта величина
  будет списана с баланса одного счёта и занесена на баланс другого. Сумма от этого не поменяется.

  Покажем это на примере. Пусть баланс первого счёта A, баланс второго счёта B, баланс третьего счёта С.
  Пусть один процесс меняет счёт А1 и A2 местами, а второй A2 и A3.

    1E: (A1 'balance) => A
    2E: (A2 'balance) => B
    1E: (A2 'balance) => B
    2E: (A3 'balance) => C
    1E: (difference (- A B))
    2E: (difference (- B C))
    2E: ((A2 'withdraw) (- B C)) => (- B (- B C))
    1E: ((A1 'withdraw) (- A B)) => (- A (- A B))
    1E: ((A2 'deposit) (- A B)) => (+ (- B (- B C)) (- A B))
    2E: ((A3 'deposit) (- B C)) => (+ C (- B C))

  Подсчитаем сумму: (A + B - A) + ((B + C - B) + A - B) + (C + B - C) = B + (C + A - B) + B = А + В + С.

  3) Покажем, что и это условие (сохранность суммы) нарушается, если не сериализовать транзакции по
  отдельным счетам.
  Вспомним, как выглядят withdraw и deposit:

    (define (withdraw amount)
      (if (>= balance amount)
        (begin
          (set! balance (- balance amount)) ; именно здесь и может закрастся ошибка в вычислениях
          balance)
      "Недостаточно денег на счете"))

    (define (deposit amount)
      (set! balance (+ balance amount))
      balance)

      │ account1 account2 account3
      │ balance  balance  balance           exchange1                  exchange2
      │ ┏━━━━━━━┓┏━━━━━━━┓┏━━━━━━━┓┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │ ┃  1 0  ┃┃  2 0  ┃┃  3 0  ┃┃ (account1 'balance): 10 ┃
      │ ┗━━━┯━━━┛┗━━━┯━━━┛┗━━━┯━━━┛┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │     │        │        │                 ▼             ┃ (account2 'balance): 20 ┃
      │     │        │        │    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛
      │     │        │        │    ┃ (account2 'balance): 20 ┃             ▼
      │     │        │        │    ┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │     │        │        │                 ▼             ┃ (account3 'balance): 30 ┃
      │     │        │        │    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛
      │     │        │        │    ┃ difference: (- 10 20)   ┃             ▼
      │     │        │        │    ┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │     ▼        │        │                 ▼             ┃ difference: (- 20 30)   ┃
      │ ┏━━━━━━━┓    │        │    ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛
      │ ┃  2 0  ┃◄───│────────│────┨(account1 'withdraw): -10┃             │
      │ ┗━━━━━━━┛    │        │    ┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛             │
      │              │        │                 ▼                          │
      │              │        │    ╔═════════════════════════╗             │
      │              │        │    ║((account2 'deposit) -10)║             │
      │              ▼        │    ╠═════════════════════════╣             ▼
      │          ┏━━━━━━━┓    │    ║ (read balance: 20)      ║┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │          ┃  3 0  ┃◄───│────║┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈║┨(account2 'withdraw): -10┃
      │          ┗━━━┯━━━┛    │    ║ (+ 20 -10)              ║┗━━━━━━━━━━━━┯━━━━━━━━━━━━┛
      │              ▼        │    ║ (set! balance 10)       ║             │
      │          ┏━━━━━━━┓    │    ╚════════════╤════════════╝             │
      │          ┃  1 0  ┃◄───▼─────────────────┘                          ▼
      │          ┗━━━━━━━┛┏━━━━━━━┓                           ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
      │                   ┃  2 0  ┃◄──────────────────────────┨(account3 'deposit): -10 ┃
      │                   ┗━━━━━━━┛                           ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
      ▼
    time

  Сумма была 60, а стала (20 + 10 + 20) = 50.
|#
